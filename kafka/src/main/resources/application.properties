spring.application.name=kafka

# earliest: É útil quando você deseja que o consumidor processe todas as mensagens disponíveis desde o início do tópico.
#   Ideal para aplicações onde a ordem completa de eventos é importante e onde não se pode perder nenhuma mensagem,
#   mesmo as que foram produzidas antes do grupo-consumidor ser iniciado.
# latest: o default, É usado quando você está interessado apenas nas novas mensagens produzidas após o consumidor
#   começar a ler. Isso é típico em aplicações onde apenas as novas informações são relevantes, como em muitos sistemas
#   de monitoramento ou notificações em tempo real.
# none: Este valor garante que o consumidor só comece a ler se um offset válido estiver disponível. Isso é útil em
#   cenários onde você quer evitar que o consumidor leia mensagens que ele não deveria, garantindo que ele só leia
#   mensagens a partir de um ponto bem definido.
# Obs.: Se vc subir os consumers com latest, o default, e depois parar a aplicação, colocar esta propriedade abaixo, e
#   subir a aplicação novamente, os grupos que já haviam 'subido' NÃO vão fazer o consumo desde o começo !

spring.kafka.consumer.auto-offset-reset=earliest
